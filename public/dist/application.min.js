"use strict";var ApplicationConfiguration=function(){var applicationModuleName="skra-punk",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ezfb","ui.utils","angulartics","angulartics.google.analytics"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["ezfbProvider","$locationProvider","$analyticsProvider",function(ezfbProvider,$locationProvider,$analyticsProvider){$locationProvider.hashPrefix("!"),ezfbProvider.setLocale("el_GR"),ezfbProvider.setInitParams({appdId:"296559977173451",xfbml:!0,version:"v2.0"}),$analyticsProvider.virtualPageView(!1)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles",["ckeditor"]),ApplicationConfiguration.registerModule("categories"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("tags"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",views:{"":{templateUrl:"modules/articles/views/list-articles.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}}).state("createArticle",{url:"/articles/create",views:{"":{templateUrl:"modules/articles/views/create-article.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}}).state("viewArticle",{url:"/articles/:articleId",views:{"":{templateUrl:"modules/articles/views/view-article.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_relevant.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}}).state("editArticle",{url:"/articles/:articleId/edit",views:{"":{templateUrl:"modules/articles/views/edit-article.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","$sce","$filter","$window","Authentication","Articles","Categories","Tags","Users",function($scope,$stateParams,$location,$sce,$filter,$window,Authentication,Articles,Categories,Tags,Users){$scope.authentication=Authentication,$scope.editorOptions={language:"en",allowedContent:!0,entities:!1,disableAutoInline:!0},$scope.editorReady=function(){},$scope.categories=Categories.query(),$scope.tags=Tags.query(),$scope.article=new Articles({title:"",content:"",summary:"",tags:[]}),$scope.status={isopen:!1},$scope.create=function(){var article=$scope.article;article.hasOwnProperty("category")&&(article.hasOwnProperty("subcategory")&&article.tags.push(article.subcategory),article.category=article.category._id),article.tags.length&&(article.tags=$window._.pluck(article.tags,"_id")),delete article.subcategory,article.$save(function(response){$location.path("articles/"+response._id),$scope.status.isopen=!1},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id),$scope.status.isopen=!1},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId},function(){$scope.article.category=$window._.findWhere($scope.categories,{_id:$scope.article.category._id});var subcategory=$window._.findWhere($scope.article.tags,{isSubcategory:!0});"undefined"!=typeof subcategory&&($scope.article.subcategory=$window._.findWhere($scope.article.category.subcategories,{_id:subcategory._id})),$scope.users=Users.query(function(){$scope.article.user=$window._.findWhere($scope.users,{_id:$scope.article.user._id})})})},$scope.trustAsHtml=function(content){return $sce.trustAsHtml(content)},$scope.addTag=function(tag,index){$scope.article.tags.push(tag),$scope.tags.splice(index,1)},$scope.removeTag=function(tag,index){$scope.tags.push(tag),$scope.article.tags.splice(index,1)},$scope.openDatepicker=function(event){event.preventDefault(),event.stopPropagation(),$scope.datepickerOpened=!0}}]),angular.module("articles").controller("ViewArticlesController",["$scope","$stateParams","$location","$sce","$filter","$window","Authentication","Articles",function($scope,$stateParams,$location,$sce,$filter,$window,Authentication,Articles){$scope.authentication=Authentication,$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})},$scope.trustAsHtml=function(content){return $sce.trustAsHtml(content)}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("categories").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Categories","categories","dropdown","/categories(/create)?"),Menus.addSubMenuItem("topbar","categories","List Categories","categories"),Menus.addSubMenuItem("topbar","categories","New Category","categories/create","menuItemURL",!1,["admin"])}]),angular.module("categories").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCategories",{url:"/categories",views:{"":{templateUrl:"modules/categories/views/list-categories.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}}).state("createCategory",{url:"/categories/create",views:{"":{templateUrl:"modules/categories/views/create-category.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}}).state("viewCategory",{url:"/categories/:categoryId",views:{"":{templateUrl:"modules/categories/views/view-category.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}}).state("editCategory",{url:"/categories/:categoryId/edit",views:{"":{templateUrl:"modules/categories/views/edit-category.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}})}]),angular.module("categories").controller("CategoriesController",["$scope","$stateParams","$location","$window","Authentication","Categories","Tags",function($scope,$stateParams,$location,$window,Authentication,Categories,Tags){$scope.authentication=Authentication,$scope.tags=Tags.query(),$scope.category=new Categories({name:"",subcategories:[]}),$scope.status={isopen:!1},$scope.create=function(){var category=$scope.category;category.subcategories=$window._.pluck(category.subcategories,"_id"),category.$save(function(response){$location.path("categories/"+response._id),$scope.category.name="",$scope.category.subcategories=[]},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(category){if(category){category.$remove();for(var i in $scope.categories)$scope.categories[i]===category&&$scope.categories.splice(i,1)}else $scope.category.$remove(function(){$location.path("categories")})},$scope.update=function(){var category=$scope.category;category.$update(function(){$location.path("categories/"+category._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.categories=Categories.query()},$scope.findOne=function(){$scope.category=Categories.get({categoryId:$stateParams.categoryId})},$scope.addSubcategory=function(subcategory,index){$scope.category.subcategories.push(subcategory),$scope.tags.splice(index,1)},$scope.removeSubcategory=function(subcategory,index){$scope.tags.push(subcategory),$scope.category.subcategories.splice(index,1)}}]),angular.module("categories").factory("Categories",["$resource",function($resource){return $resource("categories/:categoryId",{categoryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",views:{"":{templateUrl:"modules/core/views/home.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}}).state("about",{url:"/about",views:{"":{templateUrl:"modules/core/views/about.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}})}]).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){$rootScope.$on("$stateChangeStart",function(event,toState){return toState.hasOwnProperty("data")&&toState.data.requiresLogin&&!Authentication.user?(event.preventDefault(),$state.go("home"),!1):void 0})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus","Categories",function($scope,Authentication,Menus,Categories){$scope.authentication=Authentication,$scope.categories=Categories.query(function(){$scope.categories=$scope.categories.reverse()}),$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","Articles",function($scope,Authentication,Articles){$scope.authentication=Authentication,$scope.slides=Articles.query({tag:"5480ffa699fe89ea050c0cbb"}),$scope.recents=Articles.query({limit:10})}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",!1,["user","admin"])}]),angular.module("tags").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Tags","tags","dropdown","/tags(/create)?"),Menus.addSubMenuItem("topbar","tags","List Tags","tags"),Menus.addSubMenuItem("topbar","tags","New Tag","tags/create")}]),angular.module("tags").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTags",{url:"/tags",views:{"":{templateUrl:"modules/tags/views/list-tags.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}}).state("createTag",{url:"/tags/create",views:{"":{templateUrl:"modules/tags/views/create-tag.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}}).state("viewTag",{url:"/tags/:tagId",views:{"":{templateUrl:"modules/tags/views/view-tag.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}}).state("editTag",{url:"/tags/:tagId/edit",views:{"":{templateUrl:"modules/tags/views/edit-tag.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}})}]),angular.module("tags").controller("TagsController",["$scope","$stateParams","$location","Authentication","Tags",function($scope,$stateParams,$location,Authentication,Tags){$scope.authentication=Authentication,$scope.tag=new Tags({name:"",isSubcategory:!1}),$scope.create=function(){var tag=$scope.tag;tag.$save(function(response){$location.path("tags/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(tag){if(tag){tag.$remove();for(var i in $scope.tags)$scope.tags[i]===tag&&$scope.tags.splice(i,1)}else $scope.tag.$remove(function(){$location.path("tags")})},$scope.update=function(){var tag=$scope.tag;tag.$update(function(){$location.path("tags/"+tag._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.tags=Tags.query()},$scope.findOne=function(){$scope.tag=Tags.get({tagId:$stateParams.tagId})}}]),angular.module("tags").controller("ViewTagsController",["$scope","$stateParams","Authentication","Articles","Tags",function($scope,$stateParams,Authentication,Articles,Tags){$scope.authentication=Authentication,$scope.tag=Tags.get({tagId:$stateParams.tagId}),$scope.articles=Articles.query({tag:$stateParams.tagId})}]),angular.module("tags").factory("Tags",["$resource",function($resource){return $resource("tags/:tagId",{tagId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]).run(["Menus",function(Menus){Menus.addMenuItem("topbar","Users","users","dropdown","/users(/create)?",!1,["admin"]),Menus.addSubMenuItem("topbar","users","List Users","users","menuItemURL",!1,["admin"]),Menus.addSubMenuItem("topbar","users","Add User","signup","menuItemURL",!1,["admin"])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",views:{"":{templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}},data:{requiresLogin:!0}}).state("password",{url:"/settings/password",views:{"":{templateUrl:"modules/users/views/settings/change-password.client.view.html"}},data:{requiresLogin:!0}}).state("accounts",{url:"/settings/accounts",views:{"":{templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}},data:{requiresLogin:!0}}).state("signup",{url:"/signup",views:{"":{templateUrl:"modules/users/views/authentication/signup.client.view.html"}},data:{requiresLogin:!0}}).state("signin",{url:"/signin",views:{"":{templateUrl:"modules/users/views/authentication/signin.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}}).state("forgot",{url:"/password/forgot",views:{"":{templateUrl:"modules/users/views/password/forgot-password.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}}).state("reset-invlaid",{url:"/password/reset/invalid",views:{"":{templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}}).state("reset-success",{url:"/password/reset/success",views:{"":{templateUrl:"modules/users/views/password/reset-password-success.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}}).state("reset",{url:"/password/reset/:token",views:{"":{templateUrl:"modules/users/views/password/reset-password.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}}).state("listUsers",{url:"/users",views:{"":{templateUrl:"modules/users/views/admin/list-users.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}},data:{requiresLogin:!0}}).state("viewAuthor",{url:"/authors/:authorId",views:{"":{templateUrl:"modules/users/views/authors/author.client.view.html"},rightbar:{templateUrl:"modules/core/views/rightbar_columns.client.view.html"},leftbar:{templateUrl:"modules/core/views/leftbar.client.view.html"}}})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&"admin"!==$scope.authentication.user.roles[0]&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("AuthorsController",["$scope","$stateParams","Authors","Users",function($scope,$stateParams,Authors,Users){$scope.author=Authors.get({authorId:$stateParams.authorId}),$scope.find=function(){$scope.authors=Users.query()}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})},$scope.find=function(){$scope.users=Users.query()},$scope.promoteToAdmin=function(){$scope.isAdmin=!0}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Authors",["$resource",function($resource){return $resource("authors/:authorId",{authorId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);